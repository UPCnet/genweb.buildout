# Set another default user than root for security reasons (only in production)
user plone;

# As a thumb rule: One per CPU. If you are serving a large amount
# of static files, which requires blocking disk reads, you may want
# to increase this from the number of cpu_cores available on your
# system.
#
# The maximum number of connections for Nginx is calculated by:
# max_clients = worker_processes * worker_connections

worker_processes 2;
daemon on;

# Maximum file descriptors that can be opened per process
# This should be > worker_connections

worker_rlimit_nofile 8192;

events {
  # When you need > 8000 * cpu_cores connections, you start optimizing
  # your OS, and this is probably the point at where you hire people
  # who are smarter than you, this is *a lot* of requests.

  worker_connections  8000;
}

# Change these paths to somewhere that suits you!
pid /var/nginx/var/nginx.pid;
error_log /var/nginx/var/log/nginx.error.log;

http {
  # Set the mime-types via the mime.types external file
  include       nginx-mime.types;

  # XXX: Change on production
  ssl_certificate       ssl/localhost.crt;
  ssl_certificate_key   ssl/localhost.key;


  map $scheme $server_https {
     default off;
     https on;
  }

  # And the fallback mime-type
  default_type  application/octet-stream;

  # Format for our log files
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

  # Click tracking!
  access_log   /var/nginx/var/log/nginx.access.log  main;

  # ~2 seconds is often enough for HTML/CSS, but connections in
  # Nginx are cheap, so generally it's safe to increase it
  keepalive_timeout 20;

  # You usually want to serve static files with Nginx
  sendfile on;

  tcp_nopush on; # off may be better for Comet/long-poll stuff
  tcp_nodelay off; # on may be better for Comet/long-poll stuff

  # Enable Gzip:
  gzip on;
  gzip_http_version 1.0;
  gzip_comp_level 5;
  gzip_min_length 512;
  gzip_buffers 16 8k;
  gzip_proxied any;
  gzip_types
    # text/html is always compressed by HttpGzipModule
    text/css
    text/javascript
    text/xml
    text/plain
    text/x-component
    application/javascript
    application/x-javascript
    application/json
    application/xml
    application/rss+xml
    font/truetype
    font/opentype
    application/vnd.ms-fontobject
    image/svg+xml;

  # This should be turned on if you are going to have pre-compressed copies (.gz) of
  # static files available. If not it should be left off as it will cause extra I/O
  # for the check. It would be better to enable this in a location {} block for
  # a specific directory:
  # gzip_static on;

  gzip_disable        "MSIE [1-6]\.";
  gzip_vary           on;

  # Allow to directly stream medium size files (static resources directly from the upstream server without buffering
  proxy_buffers              4 32k;

  upstream genweb_server {
    server localhost:9001 fail_timeout=0;
  }
  upstream max_server {
    server max.upcnet.es:6543 fail_timeout=0;
  }

#  server {
#    listen     80;
#    server_name ulearn.upcnet.es;
#    rewrite ^(.*)$ https://$host$1 last;
#  }

  # Servidor port 443
  server {
    listen 80;
    listen 443 ssl;
    #ssl on;

    client_max_body_size 4G;
    #client_body_temp_path /var/nginx/tmp;

    # e.g. "localhost" to accept all connections, or "www.example.com"
    # to handle the requests for "example.com" (and www.example.com)
    server_name ulearn.upcnet.es;

    # Path for static files
    root static/;

    #Specify a charset
    charset utf-8;

    # Custom 404 page
    error_page 404 404.html;

    # Passthrough to the static assets of Genweb
    location ~ .*?/\+\+genweb\+\+static/(.*) {
      alias /var/nginx/parts/omelette/genweb/core/static/$1;
    }
    location ~ .*?/\+\+genweb\+\+stylesheets/(.*) {
      alias /var/nginx/parts/omelette/genweb/theme/stylesheets/$1;
    }
    location ~ .*?/\+\+genweb\+\+js/(.*) {
      alias /var/nginx/parts/omelette/genweb/theme/js/$1;
    }

    location ~ .*?/\+\+gw\+\+stylesheets/(.*) {
      alias /var/nginx/parts/omelette/genweb/alternatheme/stylesheets/$1;
    }
    location ~ .*?/\+\+gw\+\+js/(.*) {
      alias /var/nginx/parts/omelette/genweb/alternatheme/js/$1;
    }

    location ~ .*?/\+\+components\+\+root/(.*) {
      alias /var/nginx/parts/omelette/genweb/core/components/$1;
    }

    location ~ .*?/\+\+components\+\+bootstrap/(.*) {
      alias /var/nginx/parts/omelette/genweb/alternatheme/components/bootstrap/$1;
    }

    location ~ .*?/\+\+components\+\+fontawesome/(.*) {
      alias /var/nginx/parts/omelette/genweb/alternatheme/components/fontawesome/$1;
    }

    # Passthrough to the static assets of uLearn
    location ~ .*?/\+\+ulearn\+\+static/(.*) {
      alias /var/nginx/parts/omelette/ulearn/theme/static/$1;
    }
    location ~ .*?/\+\+ulearn\+\+stylesheets/(.*) {
      alias /var/nginx/parts/omelette/ulearn/theme/stylesheets/$1;
    }
    location ~ .*?/\+\+ulearn\+\+js/(.*) {
      alias /var/nginx/parts/omelette/ulearn/theme/js/$1;
    }

    # Passthrough to the static assets of MAXUI
    location ~ .*?/\+\+maxui\+\+static/(.*) {
      alias /var/nginx/parts/omelette/mrs/max/static/$1;
    }

    # MAX passthrough for legacy IE compat
    location = /max {rewrite ^([^.]*[^/])$ $1/ permanent;}
    location ~ ^/max/(.*) {
        proxy_set_header X-Virtual-Host-URI $scheme://$host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;

        rewrite ^/max/(.*) /$1 break;
        proxy_pass   http://max_server;
    }

    ###############################################################
    # Finally, the location of the application

    location / {
        # FOR SSL --> # proxy_set_header X-Virtual-Host-URI $scheme://localhost;
        proxy_set_header X-Virtual-Host-URI $scheme://$host:$server_port;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;

	      rewrite ^/(.*)$ /VirtualHostBase/$scheme/$host:$server_port/upcnet/ulearn/VirtualHostRoot/$1 break;
        proxy_pass   http://genweb_server;
    }

    # Include other ulearn locations
    # include /var/nginx/config/ulearn-instances.conf;
    # include /var/nginx/config/ulearn-instances/*.conf;
  }

  # Include other virtualhosts
  include /var/nginx/config/sites-enabled/*;
}
