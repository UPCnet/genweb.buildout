[buildout]
parts =
    varnish-build
    haproxy-build

    varnish1
    varnish2
    cache-config1
    cache-config2

    balancer-config1
    balancer-config2

    circus
    circus-ini

extends = customizeme.cfg
          config/projects.cfg
          http://dist.plone.org/release/4.3.3/versions.cfg
          versions.cfg

find-links =
    http://pypi.upc.edu/links

# network speedup
socket-timeout = 3
allow-hosts =
    pypi.upc.edu
    *.python.org
    docutils.sourceforge.net
    prdownloads.sourceforge.net
    effbot.org

[downloads]
nginx = http://pypi.upc.edu/static/nginx-1.6.0.tar.gz
varnish = http://pypi.upc.edu/static/varnish-4.0.1.tar.gz
haproxy = http://pypi.upc.edu/static/haproxy-1.5.3.tar.gz

[hosts]
cache = 0.0.0.0
cache-telnet = 0.0.0.0
balancer = 0.0.0.0

[ports]
cache1 = 9001
cache-telnet1 = 9101
cache2 = 9002
cache-telnet2 = 9102
balancer1 = 10001
balancer2 = 10002
circus = 8081

[users]
cache = plone
balancer = plone

[varnish-build]
recipe = zc.recipe.cmmi
url = ${downloads:varnish}

[haproxy-build]
recipe = plone.recipe.haproxy
url = ${downloads:haproxy}
# target = generic
target = linux26

[cache-config1]
recipe = collective.recipe.template
input = ${buildout:directory}/config/templates/cache1.conf.template
output = ${buildout:directory}/config/cache1.conf

[cache-config2]
recipe = collective.recipe.template
input = ${buildout:directory}/config/templates/cache2.conf.template
output = ${buildout:directory}/config/cache2.conf

[varnishCommon]
recipe = plone.recipe.varnish:instance
daemon = ${buildout:parts-directory}/varnish-build/sbin/varnishd
mode = foreground
cache-size = 256M
cache-type = malloc
#verbose-headers = on
user = ${users:cache}

[varnish1]
<= varnishCommon
bind = ${hosts:cache}:${ports:cache1}
config = ${buildout:directory}/config/cache1.conf
name = varnish1
telnet = ${hosts:cache-telnet}:${ports:cache-telnet1}

[varnish2]
<= varnishCommon
bind = ${hosts:cache}:${ports:cache2}
config = ${buildout:directory}/config/cache2.conf
name = varnish2
telnet = ${hosts:cache-telnet}:${ports:cache-telnet2}

[balancerConfig]
group = plone
maxconn = 24000

[balancer-config1]
<= balancerConfig
recipe = collective.recipe.template
input = ${buildout:directory}/config/templates/balancer1.conf.template
output = ${buildout:directory}/config/balancer1.conf

[balancer-config2]
<= balancerConfig
recipe = collective.recipe.template
input = ${buildout:directory}/config/templates/balancer2.conf.template
output = ${buildout:directory}/config/balancer2.conf

[circus]
recipe = zc.recipe.egg:scripts
eggs = circus
       circus-web

[circus-ini]
recipe = collective.recipe.template
input = ${buildout:directory}/config/templates/circus_prefrontends_only.ini.template
output = ${buildout:directory}/config/circus.ini
