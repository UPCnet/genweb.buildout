[buildout]
parts =
    filestorage
    instance
    omelette
    themepreview
    test
    test-gwcore
    codeintel
    i18ndude
    robot
    zopepy

extends =
    config/projects.cfg
    config/sources.cfg
    buildout.cfg
    customizeme.cfg
    https://dist.plone.org/release/4.3.7/versions.cfg
    versions.cfg
versions = versions

eggs += Products.PrintingMailHost
        Products.DCWorkflowGraph
        plone.reload
        ipdb

developeggs += ${genwebupc:eggs}
#              ${genwebextras:eggs}
              ${genwebaddons:eggs}
#              ${genwebmigration:eggs}
              ${genwebdevel:eggs}

[test]
recipe = zc.recipe.testrunner
defaults = ['--exit-with-status', '--auto-color', '--auto-progress', '--verbose', '--ndiff']
eggs = genweb.upc[test]

[test-gwcore]
recipe = zc.recipe.testrunner
defaults = ['--exit-with-status', '--auto-color', '--auto-progress', '--verbose', '--ndiff']
eggs = genweb.core[test]

[versions]
# CSRF vulnerability pins
#plone.protect = 3.1.3
#plone4.csrffixes = 1.1
#plone.keyring = 3.0.1
#plone.locking = 2.0.9

[robot]
recipe = zc.recipe.egg
eggs =
   Pillow
   ${test:eggs}
   plone.app.robotframework[reload]

# Creates a Python interpreter that has all the eggs and packages that Zope would have during startup.
# This can be useful for testing purposes.
# Here, we copy the eggs from the [instance] section, and include in the pythonpath the Zope instance home.
[zopepy]
recipe = zc.recipe.egg
eggs = ${instance:eggs}
interpreter = zopepy
scripts = zopepy