[buildout]
parts =
    no_cfg_specified

# network speedup
socket-timeout = 3
allow-hosts =
    pypi.upc.edu
    *.python.org
    docutils.sourceforge.net
    prdownloads.sourceforge.net
    effbot.org

# UPC Pypi mirror just in case
# index = http://pypi.upc.edu/mirror
# or
# index = http://colladaverda.upc.edu/pypi
# allow-hosts = pypi.upc.edu
#               colladaverda.upc.edu

find-links =
    http://pypi.upc.edu/links
    http://dist.plone.org/release/4.3-latest
    http://dist.plone.org/thirdparty

# Add additional eggs here (develop and experimental)
eggs =  plone.reload
        profilehooks
        Products.PloneLDAP

# Uncomment to activate debug packages
#        plone.app.debugtoolbar

developeggs = ${genwebcore:eggs}
# ${max:eggs}
# ${ulearn:eggs}
# ${genwebupc:eggs}
# ${genwebaddons:eggs}
# ${websites:eggs}
# ${vilaix_transparencia:eggs}

# Experimental
#            plone.app.widgets
#            mockup

develop =

extensions = mr.developer
always-checkout = force
auto-checkout = ${buildout:developeggs}

# Experimental
#                plone.app.widgets
#                mockup

[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 8080
# debug-mode = on
# verbose-security = on
blob-storage = var/blobstorage
#effective-user = plone
#python-check-interval = 1800
eggs =
    Zope2
    Pillow
    Plone
    ${buildout:eggs}
    ${buildout:developeggs}

environment-vars =
    PTS_LANGUAGES ca es en
    zope_i18n_allowed_languages ca es en
    zope_i18n_compile_mo_files true
    ldapbindpasswd ${ldapconfig:bindpasswd}
    alt_ldap_uri ${ldapconfig:alt_ldap_uri}
    alt_bind_dn ${ldapconfig:alt_bind_dn}
    alt_bindpasswd ${ldapconfig:alt_bindpasswd}
    alt_base_dn ${ldapconfig:alt_base_dn}
    PYTHONWARNINGS ignore
zcml =
zope-conf-additional =
    <product-config genwebconfig>
        zeo 1
    </product-config>

[filestorage]
# For enable ZODB mount points in the development buildout
# for testing and debug purposes
recipe = collective.recipe.filestorage
parts = comunitat
        2
        37
# comunitat =
#  2 =
# 37 = Switchmed production site

location = var/filestorage/Data_%(fs_part_name)s.fs
blob-storage = var/blobstorage/%(fs_part_name)s

[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}
       ${testing:eggs}

[themepreview]
recipe = zc.recipe.egg
eggs =
    ${test:eggs}
    Sphinx
    sphinx-rtd-theme
    plone.app.robotframework [debug]
    sphinxcontrib-robotframework [docs]
scripts =
    sphinx-build

[codeintel]
recipe = corneti.recipes.codeintel
eggs = ${instance:eggs}
extra-paths =
    ${omelette:location}

[code-analysis]
recipe = plone.recipe.codeanalysis
directory = ${buildout:directory}/src
utf8-header = True
prefer-single-quotes = True
imports = False
debug-statements = True
deprecated-aliases = True
zptlint = True
flake8-ignore = E501
flake8-max-complexity = 13

[flake8]
recipe = zc.recipe.egg
eggs = flake8
       ${instance:eggs}
entry-points =
    flake8=flake8.run:main

[createcoverage]
recipe = zc.recipe.egg
eggs = createcoverage

[coverage-report]
recipe = collective.recipe.template
input = inline:
   #!/bin/bash
   ${buildout:bin-directory}/createcoverage ${buildout:bin-directory}/test
mode = 755
output = ${buildout:bin-directory}/coverage-report

[sphinx]
recipe = zc.recipe.egg
eggs =
#    sphinx.themes.plone
    Sphinx
#    sphinxcontrib-spelling
#    pyenchant
#    ctypes # this bugger not being available was the cause of pyenchant not being installable. Unfortunately it doesn't install on macos.

[sphinxbuilder]
recipe = collective.recipe.sphinxbuilder
eggs = ${sphinx:eggs}
source = ${buildout:directory}/docs
build = ${buildout:directory}/docs
extra-paths =
    src/

[generate-docs]
recipe = collective.recipe.template
input = inline:
   #!/bin/sh
   ${buildout:bin-directory}/sphinx-build ${buildout:directory}/docs docs/html
mode = 755
output = ${buildout:bin-directory}/generate-docs

[rebuild_i18n-sh]
recipe = collective.recipe.template
url = https://raw.github.com/collective/buildout.plonetest/master/templates/rebuild_i18n.sh.in
output = ${buildout:directory}/bin/rebuild_i18n.sh
mode = 755

[i18ndude]
recipe = zc.recipe.egg
eggs = i18ndude

[mrbob]
recipe = zc.recipe.egg
eggs = mr.bob
       bobtemplates.plone

[no_cfg_specified]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds = echo "Behold the Genweb Ã¼ber-buildout!!\n"
       echo "Remember to invoke the -c name_of_the_project.cfg according to your needs.\n"
       echo "For example: ./bin/buildout -c genwebupc.cfg\n"
